# SPDX-FileCopyrightText: 2023 - 2024 Nikita Chernyi
# SPDX-FileCopyrightText: 2023 - 2025 Slavi Pantaleev
# SPDX-FileCopyrightText: 2024 Sergio Durigan Junior
# SPDX-FileCopyrightText: 2025 MASH project contributors
# SPDX-FileCopyrightText: 2025 Suguru Hirahara
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
# Project source code URL: https://github.com/YOURLS/YOURLS

yourls_enabled: true

yourls_identifier: yourls
yourls_base_path: "{{ yourls_identifier }}"

# renovate: datasource=docker depName=yourls versioning=semver
yourls_version: 1.10.1

yourls_uid: ''
yourls_gid: ''

# The hostname at which YOURLS is served.
yourls_hostname: ''

# Specify URI scheme for yourls_environment_variable_site.
yourls_scheme: https

# The path at which YOURLS is exposed.
# This value must either be `/` or not end with a slash (e.g. `/yourls`).
yourls_path_prefix: /

yourls_container_image: "{{ yourls_container_image_registry_prefix }}yourls:{{ yourls_container_image_tag }}"
yourls_container_image_tag: "{{ yourls_version }}"
yourls_container_image_registry_prefix: "{{ yourls_container_image_registry_prefix_upstream }}"
yourls_container_image_registry_prefix_upstream: "{{ yourls_container_image_registry_prefix_upstream_default }}"
yourls_container_image_registry_prefix_upstream_default: docker.io/
yourls_container_image_force_pull: "{{ yourls_container_image.endswith(':latest') }}"

# Controls whether the container exposes its HTTP port (tcp/80 in the container).
#
# Takes an "<ip>:<port>" or "<port>" value (e.g. "127.0.0.1:2586"), or empty string to not expose.
yourls_container_http_host_bind_port: ''

# The base container network. It will be auto-created by this role if it doesn't exist already.
yourls_container_network: "{{ yourls_identifier }}"

# The port number in the container
yourls_container_http_port: 80

# A list of additional container networks that the container would be connected to.
# The role does not create these networks, so make sure they already exist.
# Use this to expose this container to another reverse proxy, which runs in a different container network.
yourls_container_additional_networks: "{{ yourls_container_additional_networks_auto + yourls_container_additional_networks_custom }}"
yourls_container_additional_networks_auto: []
yourls_container_additional_networks_custom: []

# A list of additional "volumes" to mount in the container.
# This list gets populated dynamically at runtime. You can provide a different default value,
# if you wish to mount your own files into the container.
# Contains definition objects like this: `{"type": "bind", "src": "/outside", "dst": "/inside", "options": "readonly"}.
# See the `--mount` documentation for the `docker run` command.
yourls_container_additional_volumes: []

# yourls_container_labels_traefik_enabled controls whether labels to assist a Traefik reverse-proxy will be attached to the container.
# See `../templates/labels.j2` for details.
#
# To inject your own other container labels, see `yourls_container_labels_additional_labels`.
yourls_container_labels_traefik_enabled: true
yourls_container_labels_traefik_docker_network: "{{ yourls_container_network }}"
yourls_container_labels_traefik_hostname: "{{ yourls_hostname }}"
# The path prefix must either be `/` or not end with a slash (e.g. `/yourls`).
yourls_container_labels_traefik_path_prefix: "{{ yourls_path_prefix }}"
yourls_container_labels_traefik_rule: "Host(`{{ yourls_container_labels_traefik_hostname }}`){% if yourls_container_labels_traefik_path_prefix != '/' %} && PathPrefix(`{{ yourls_container_labels_traefik_path_prefix }}`){% endif %}"
yourls_container_labels_traefik_priority: 0
yourls_container_labels_traefik_entrypoints: web-secure
yourls_container_labels_traefik_tls: "{{ yourls_container_labels_traefik_entrypoints != 'web' }}"
yourls_container_labels_traefik_tls_certResolver: default  # noqa var-naming

# Controls which additional headers to attach to all HTTP responses.
# To add your own custom response headers, use `yourls_container_labels_traefik_additional_response_headers_custom`
yourls_container_labels_traefik_additional_response_headers: "{{ yourls_container_labels_traefik_additional_response_headers_auto | combine(yourls_container_labels_traefik_additional_response_headers_custom) }}"
yourls_container_labels_traefik_additional_response_headers_auto: |
  {{
    {}
    | combine ({'X-XSS-Protection': yourls_http_header_xss_protection} if yourls_http_header_xss_protection else {})
    | combine ({'X-Content-Type-Options': yourls_http_header_content_type_options} if yourls_http_header_content_type_options else {})
    | combine ({'Content-Security-Policy': yourls_http_header_content_security_policy} if yourls_http_header_content_security_policy else {})
    | combine ({'Permission-Policy': yourls_http_header_content_permission_policy} if yourls_http_header_content_permission_policy else {})
    | combine ({'Strict-Transport-Security': yourls_http_header_strict_transport_security} if yourls_http_header_strict_transport_security and yourls_container_labels_traefik_tls else {})
  }}
yourls_container_labels_traefik_additional_response_headers_custom: {}

# yourls_container_labels_additional_labels contains a multiline string with additional labels to add to the container label file.
# See `../templates/labels.j2` for details.
#
# Example:
# yourls_container_labels_additional_labels: |
#   my.label=1
#   another.label="here"
yourls_container_labels_additional_labels: ''

# A list of extra arguments to pass to the container (`docker run` command)
yourls_container_extra_arguments: []

# Specifies the value of the `X-XSS-Protection` header
# Stops pages from loading when they detect reflected cross-site scripting (XSS) attacks.
#
# Learn more about it is here:
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
# - https://portswigger.net/web-security/cross-site-scripting/reflected
yourls_http_header_xss_protection: "1; mode=block"

# Specifies the value of the `X-Content-Type-Options` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
yourls_http_header_content_type_options: nosniff

# Specifies the value of the `Content-Security-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
yourls_http_header_content_security_policy: frame-ancestors 'self'

# Specifies the value of the `Permission-Policy` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permission-Policy
yourls_http_header_content_permission_policy: "{{ 'interest-cohort=()' if yourls_floc_optout_enabled else '' }}"

# Specifies the value of the `Strict-Transport-Security` header.
# See: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
yourls_http_header_strict_transport_security: "max-age=31536000; includeSubDomains{{ '; preload' if yourls_hsts_preload_enabled else '' }}"

# Controls whether to yourls a "Permissions-Policy interest-cohort=();" header along with all responses
#
# Learn more about what it is here:
# - https://www.eff.org/deeplinks/2021/03/googles-floc-terrible-idea
# - https://paramdeo.com/blog/opting-your-website-out-of-googles-floc-network
# - https://amifloced.org/
#
# Of course, a better solution is to just stop using browsers (like Chrome), which participate in such tracking practices.
# See: `yourls_content_permission_policy`
yourls_floc_optout_enabled: true

# Controls if HSTS preloading is enabled
#
# In its strongest and recommended form, the [HSTS policy](https://www.chromium.org/hsts) includes all subdomains, and
# indicates a willingness to be "preloaded" into browsers:
# `Strict-Transport-Security: max-age=31536000; includeSubDomains; preload`
# For more information visit:
# - https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security
# - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
# - https://hstspreload.org/#opt-in
# See: `yourls_http_header_strict_transport_security`
yourls_hsts_preload_enabled: false

# List of systemd services that the YOURLS systemd service depends on
yourls_systemd_required_services_list: "{{ yourls_systemd_required_services_list_default + yourls_systemd_required_services_list_auto + yourls_systemd_required_services_list_custom }}"
yourls_systemd_required_services_list_default: "{{ [devture_systemd_docker_base_docker_service_name] if devture_systemd_docker_base_docker_service_name else [] }}"
yourls_systemd_required_services_list_auto: []
yourls_systemd_required_services_list_custom: []

# List of systemd services that the YOURLS systemd service wants
yourls_systemd_wanted_services_list: []

# env.j2: General configuration
yourls_environment_variable_user: ''
yourls_environment_variable_pass: ''

# env.j2: MySQL settings
#
# MySQL settings
yourls_environment_variable_db_user: joe
yourls_environment_variable_db_pass: MySeCreTPaSsW0rd
yourls_environment_variable_db_name: yourls
yourls_environment_variable_db_host_name: localhost
yourls_environment_variable_db_host_port: 3306
yourls_environment_variable_db_prefix: yourls_

# env.j2: Site options
#
yourls_environment_variable_site: "{{ yourls_scheme }}://{{ yourls_hostname }}"
yourls_environment_variable_private: true
yourls_environment_variable_unique_urls: true
yourls_environment_variable_cookiekey: ''

# env.j2: URL Shortening settings
#
yourls_environment_variable_url_convert: 36

# env.j2: Optional settings
#
yourls_environment_variable_private_infos: true
yourls_environment_variable_private_api: true
yourls_environment_variable_nostats: false
yourls_environment_variable_debug: false

# Additional environment variables.
# See: https://yourls.org/docs/guide/essentials/configuration#url-shortening-settings
yourls_environment_variables_additional_variables: ''
